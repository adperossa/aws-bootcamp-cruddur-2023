version: "3.8"
services:
  backend-flask:
    build: ./backend-flask
    env_file:
    - ./.env
    environment:
      # AWS_XRAY_URL: "*localhost*"
      # AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"
      OTEL_SERVICE_NAME: "backend-flask"
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io/"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"
    ports:
      - "4567:4567"
    healthcheck:
      test: curl http://localhost:4567/health
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
      - ./backend-flask:/backend-flask

  frontend-react-js:
    build: ./frontend-react-js
    env_file:
      - ./.env
    environment:
      REACT_APP_AWS_PROJECT_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_COGNITO_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_USER_POOL_ID: "us-east-1_n6a41vZUi"
      REACT_APP_CLIENT_ID: "40753dej7og8sjhrmefnm0s5qv"
    ports:
      - "3000:3000"
    healthcheck:
      test: curl http://localhost:3000
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
      - ./frontend-react-js:/frontend-react-js
      - /frontend-react-js/node_modules

  db:
    image: postgres:13-alpine
    env_file:
      - ./.env
    ports:
      - '5432:5432'
    healthcheck:
      test: pg_isready
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
      - db:/var/lib/postgresql/data

  dynamodb-local:
    # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
    # We needed to add user:root to get this working.
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - ./docker/dynamodb:/home/dynamodblocal/data
    working_dir: /home/dynamodblocal

  # xray-daemon:
  #   image: "amazon/aws-xray-daemon"
  #   environment:
  #     AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
  #     AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
  #     AWS_REGION: "us-east-1"
  #   command:
  #     - "xray -o -b xray-daemon:2000"
  #   ports:
  #     - 2000:2000/udp

networks:
  default:
    name: cruddur

volumes:
  db:
    driver: local
